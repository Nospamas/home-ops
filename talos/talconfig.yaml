# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
clusterName: &clusterName kubernetes

talosVersion: "${talosVersion}"
kubernetesVersion: "${kubernetesVersion}"

endpoint: https://192.168.0.254:6443
additionalApiServerCertSans: &sans
  - "127.0.0.1"
  - &talosControlplaneVip 192.168.0.254
  - "k8s.cansk.net"
additionalMachineCertSans: *sans

clusterPodNets: ["10.42.0.0/16"]
clusterSvcNets: ["10.43.0.0/16"]

# Disable built-in CNI to use Cilium
cniConfig:
  name: none

nodes:
  - hostname: "ctrl-01"
    ipAddress: "192.168.0.1"
    installDiskSelector:
      serial: "23253E802750"
    machineSpec:
      secureboot: false
    controlPlane: true
    networkInterfaces:
      - interface: eno1
        addresses:
          - 192.168.0.1/16
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.11.1
            metric: 1024
        vip:
          ip: *talosControlplaneVip
    extensionServices:
      - name: tailscale
        environment:
          - TS_AUTHKEY=${tsAuthCtrl01}
    userVolumes: &defaultUserVolumes
      - name: host-nvme
        provisioning:
          diskSelector:
            match: (disk.transport == 'nvme' || disk.transport == 'virtio') && system_disk
          minSize: 100Gi
          grow: true
    nodeLabels:
      longhorn-manager: "manager"
      longhorn-driver: "driver"
      longhorn-ui: "ui"
      node.longhorn.io/create-default-disk: 'config'
    nodeAnnotations:
      node.longhorn.io/default-disks-config:  &longhorn-node-config
        '[{
            "name":"longhorn-nvme",
            "path":"/var/mnt/host-nvme/",
            "storageReserved":0,
            "tags": ["ultra-fast", "ssd"],
            "allowScheduling":true
          },
          {
            "name":"longhorn-ssd",
            "path":"/var/mnt/host-ssd/",
            "storageReserved":0,
            "tags": ["fast", "ssd"],
            "allowScheduling":true
          }]'
    nodeTaints: {}
  - hostname: "ctrl-02"
    ipAddress: "192.168.0.2"
    installDiskSelector:
      serial: "2325E6E6D78C"
    machineSpec:
      secureboot: false
    talosImageURL: factory.talos.dev/installer/65cf8364cd0de4cf7b851dc7067a2db83d0ba04f11d8635c6cd3334be6ffb825
    controlPlane: true
    networkInterfaces:
      - interface: eno1
        addresses:
          - 192.168.0.2/16
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.11.1
            metric: 1024
        vip:
          ip: *talosControlplaneVip
    extensionServices:
      - name: tailscale
        environment:
          - TS_AUTHKEY=${tsAuthCtrl02}
    userVolumes: &defaultUserVolumes
      - name: host-nvme
        provisioning:
          diskSelector:
            match: (disk.transport == 'nvme' || disk.transport == 'virtio') && system_disk
          minSize: 100Gi
          grow: true
    nodeLabels:
      longhorn-manager: "manager"
      longhorn-driver: "driver"
      longhorn-ui: "ui"
      node.longhorn.io/create-default-disk: 'config'
    nodeAnnotations:
      node.longhorn.io/default-disks-config:  &longhorn-node-config
        '[{
            "name":"longhorn-nvme",
            "path":"/var/mnt/host-nvme/",
            "storageReserved":0,
            "tags": ["ultra-fast", "ssd"],
            "allowScheduling":true
          },
          {
            "name":"longhorn-ssd",
            "path":"/var/mnt/host-ssd/",
            "storageReserved":0,
            "tags": ["fast", "ssd"],
            "allowScheduling":true
          }]'
    nodeTaints: {}
  - hostname: "ctrl-03"
    ipAddress: "192.168.0.3"
    installDiskSelector:
      serial: "7QH009VY"
    machineSpec:
      secureboot: false
    talosImageURL: factory.talos.dev/installer/65cf8364cd0de4cf7b851dc7067a2db83d0ba04f11d8635c6cd3334be6ffb825
    controlPlane: true
    networkInterfaces:
      - interface: eno1
        addresses:
          - 192.168.0.3/16
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.11.1
            metric: 1024
        vip:
          ip: *talosControlplaneVip
    extensionServices:
      - name: tailscale
        environment:
          - TS_AUTHKEY=${tsAuthCtrl03}
    userVolumes: *defaultUserVolumes
    nodeLabels:
      longhorn-manager: "manager"
      longhorn-driver: "driver"
      longhorn-ui: "ui"
      node.longhorn.io/create-default-disk: 'config'
    nodeAnnotations:
      node.longhorn.io/default-disks-config: *longhorn-node-config
    nodeTaints: {}
  - hostname: "work-01"
    schematic:
      customization:
        systemExtensions:
            officialExtensions:
                - siderolabs/amd-ucode
                - siderolabs/amdgpu
                - siderolabs/i915
                - siderolabs/intel-ucode
                - siderolabs/qemu-guest-agent
                - siderolabs/tailscale
                - siderolabs/iscsi-tools
                - siderolabs/util-linux-tools
    ipAddress: "192.168.0.4"
    installDisk: "/dev/sda"
    machineSpec:
      mode: nocloud
      arch: amd64
      useUKI: true
    talosImageURL: factory.talos.dev/installer/53d9c2e8fed48f189ed51170170ff89639eb52de2d5036b8f4588e9fe3813749
    controlPlane: false
    networkInterfaces:
      - interface: eth0
        addresses:
          - 192.168.0.4/16
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.11.1
            metric: 1024
        mtu: 1500
    extensionServices:
      - name: tailscale
        environment:
          - TS_AUTHKEY=${tsAuthWork01}
    nodeLabels:
      longhorn-driver: "driver"
      longhorn-manager: "manager"
    nodeAnnotations: {}
    nodeTaints: {}

# Global patches
patches:
  - "@./patches/global/machine-files.yaml"
  - "@./patches/global/machine-kubelet.yaml"
  - "@./patches/global/machine-network.yaml"
  - "@./patches/global/machine-sysctls.yaml"
  - "@./patches/global/machine-time.yaml"

# Controller patches
controlPlane:
  nodeLabels:
    topology.kubernetes.io/region: *clusterName
    topology.kubernetes.io/zone: m
  schematic:
    customization:
      systemExtensions:
          officialExtensions:
              - siderolabs/amd-ucode
              - siderolabs/amdgpu
              - siderolabs/iscsi-tools
              - siderolabs/tailscale
              - siderolabs/util-linux-tools
  patches:
    - "@./patches/controller/admission-controller-patch.yaml"
    - "@./patches/controller/cluster.yaml"
    - "@./patches/controller/kubelet.yaml"
  extraManifests:
  - "@./volumes/volume-ephemeral.yaml"
  - "@./volumes/volume-ssd.yaml"

worker:
  nodeLabels:
    topology.kubernetes.io/region: *clusterName
    topology.kubernetes.io/zone: m
  patches:
    - "@./patches/worker/kubelet.yaml"
  extraManifests:
  - "@./volumes/volume-ephemeral.yaml"